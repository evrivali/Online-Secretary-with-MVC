// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ergasiaMVC.Data;

#nullable disable

namespace ergasiaMVC.Migrations
{
    [DbContext(typeof(MVC_Project_DbContext))]
    [Migration("20240412131644_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ergasiaMVC.Models.Course", b =>
                {
                    b.Property<int>("idCOURSE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCOURSE"));

                    b.Property<string>("CourseSemester")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("PROFESSORS_AFM")
                        .HasColumnType("int");

                    b.HasKey("idCOURSE");

                    b.HasIndex("PROFESSORS_AFM");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Professor", b =>
                {
                    b.Property<int>("AFM")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("USERS_username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("AFM");

                    b.HasIndex("USERS_username");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Secretary", b =>
                {
                    b.Property<string>("Phonenumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("USERS_username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Phonenumber");

                    b.HasIndex("USERS_username");

                    b.ToTable("Secretaries");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Student", b =>
                {
                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("USERS_username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("RegistrationNumber");

                    b.HasIndex("USERS_username");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ergasiaMVC.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ergasiaMVC.Models.course_has_students", b =>
                {
                    b.Property<int>("COURSE_idCOURSE")
                        .HasColumnType("int");

                    b.Property<int>("STUDENTS_RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<int>("GradeCourseStudent")
                        .HasColumnType("int");

                    b.HasKey("COURSE_idCOURSE", "STUDENTS_RegistrationNumber");

                    b.HasIndex("STUDENTS_RegistrationNumber");

                    b.ToTable("courses_have_students");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Course", b =>
                {
                    b.HasOne("ergasiaMVC.Models.Professor", "professor")
                        .WithMany()
                        .HasForeignKey("PROFESSORS_AFM");

                    b.Navigation("professor");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Professor", b =>
                {
                    b.HasOne("ergasiaMVC.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("USERS_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Secretary", b =>
                {
                    b.HasOne("ergasiaMVC.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("USERS_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ergasiaMVC.Models.Student", b =>
                {
                    b.HasOne("ergasiaMVC.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("USERS_username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ergasiaMVC.Models.course_has_students", b =>
                {
                    b.HasOne("ergasiaMVC.Models.Course", "course")
                        .WithMany()
                        .HasForeignKey("COURSE_idCOURSE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ergasiaMVC.Models.Student", "student")
                        .WithMany()
                        .HasForeignKey("STUDENTS_RegistrationNumber")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("student");
                });
#pragma warning restore 612, 618
        }
    }
}
